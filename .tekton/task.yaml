apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: task
spec:
  params:
    - name: header
      description: The event header
    - name: body
      description: The event body
  workspaces:
  - name: pipeline
  steps:
  - name: print-event
    env:
      - name: HEADER
        value: $(params.header)
      - name: BODY
        value: $(params.body)
    image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3.0
    script: |
      #!/usr/bin/env bash
      set -e 
      ibmcloud config --check-version false;
      ibmcloud login --no-region --apikey $(cat /workspace/properties/apikey);
      . /workspace/scripts/git-auth.sh https://github.com/skaegi/tekton-event-playground;
      git clone https://github.com/skaegi/tekton-event-playground;
      echo tada;
      #ls -al /workspace/properties;
      #ls -al /workspace/pipeline;
      #cat /workspace/toolchain.json | jq .;
    volumeMounts:
    - name: properties
      mountPath: "/workspace/properties"
    - name: toolchain
      mountPath: "/workspace/toolchain.json"
      subPath: toolchain.json
    - name: scripts
      mountPath: "/workspace/scripts"
  volumes:
  - name: properties
    projected:
      sources:
      - configMap:
          name: default-properties
          optional: true
      - configMap:
          name: environment-properties
          optional: true
      - secret:
          name: secure-properties
          optional: true
  - name: toolchain
    configMap:
      name: toolchain
  - name: scripts
    configMap:
      name: scripts
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: task2
spec:
  workspaces:
  - name: pipeline
  steps:
  - name: private-alpine
    image: us.icr.io/skaegi/buildkit-testing:20
    command: ["/bin/sh", "-c"]
    args:
    - ls -al /workspace/pipeline;
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: docker-build
spec:
  workspaces:
  - name: pipeline
  steps:
  - name: docker-build
    image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3.0
    script: |
      #!/usr/bin/env bash
      set -e 
      docker images
      docker run hello-world
      docker images
    volumeMounts:
    - mountPath: /var/run/
      name: docker-socket
  sidecars:
  - image: icr.io/continuous-delivery/pipeline/docker:19.03.15-dind
    name: docker-daemon
    securityContext:
      privileged: true
    command: ["sh", "-c"]
    args:
      # Set the MTU to a value that is containable in the ibmcloud calico mtu value
      # References:
      # - https://liejuntao001.medium.com/fix-docker-in-docker-network-issue-in-kubernetes-cc18c229d9e5
      # - https://cloud.ibm.com/docs/containers?topic=containers-kernel#calico-mtu
      #
      # Use a workaround to by pass virtio-fs for Continuous Delivery shared workers
      - if [[ $(df -PT /var/lib/docker | awk 'NR==2 {print $2}') == virtiofs ]]; then
          apk add e2fsprogs &&
          truncate -s 20G /tmp/disk.img &&
          mkfs.ext4 /tmp/disk.img &&
          mount /tmp/disk.img /var/lib/docker; fi &&
        dockerd-entrypoint.sh --mtu=1400;
    volumeMounts:
    - mountPath: /var/run/
      name: docker-socket
  volumes:
  - name: docker-socket
    emptyDir: {}